{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","App.module.css","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","INITIAL_STATE","name","number","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","addContact","id","uuidv4","reset","onSubmit","this","className","styles","form","htmlFor","type","onChange","pattern","title","required","input","React","Component","Contacts","onDelete","onClick","contacts","map","contact","Filter","filter","App","dataContacts","addNewContact","newContact","find","elem","alert","prevState","changeFilter","getContacts","normalizedFilter","toLowerCase","includes","deleteContact","item","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330b3378.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"input\":\"Contacts_input__jXMGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport styles from './Form.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass Form extends React.Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact({ id: uuidv4(), ...this.state });\n    this.reset();\n  };\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor=\"\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={styles.input}\n          />\n        </label>\n\n        <label htmlFor=\"\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contacts.module.css';\n\nclass Contacts extends React.Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    contacts: PropTypes.array.isRequired,\n  };\n\n  onDelete = id => {\n    this.props.onClick(id);\n  };\n\n  render() {\n    const contacts = this.props.contacts;\n    return (\n      <ul className={styles.contacts}>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            <p>\n              {contact.name}:{contact.number}\n            </p>\n            <button type=\"button\" onClick={() => this.onDelete(contact.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contact by name\n      <input\n        name=\"filter\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.filter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport dataContacts from './contacts.json';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: dataContacts,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('Contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = newContact => {\n    this.state.contacts.find(elem => elem.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getContacts();\n\n    return (\n      <div className={styles.app}>\n        <h1>Phonebook</h1>\n        <Form addContact={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <Contacts contacts={filteredContacts} onClick={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}